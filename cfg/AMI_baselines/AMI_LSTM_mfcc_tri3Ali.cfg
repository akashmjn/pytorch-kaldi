[cfg_proto]
cfg_proto=proto/global.proto
cfg_proto_chunk=proto/global_chunk.proto

[exp]
cmd=
run_nn_script=run_nn.py
out_folder=exp/sp_comb/LSTM_cudnn_lr15e-5
seed=1234
use_cuda=True
multi_gpu=True
save_gpumem=True
n_epochs_tr=16

[dataset1]
data_name=train_sp_comb_hires
fea = fea_name=mfcc
    fea_lst=/tmp/pytorch-kaldi/kaldi_data_dir/data/ihm/train_sp_comb_hires/feats.scp
    fea_opts=apply-cmvn --utt2spk=ark:/tmp/pytorch-kaldi/kaldi_data_dir/data/ihm/train_sp_comb_hires/utt2spk  ark:/tmp/pytorch-kaldi/kaldi_data_dir/data/ihm/train_sp_hires/data/cmvn_train_sp_hires.ark ark:- ark:- | add-deltas --delta-order=0 ark:- ark:- |
    cw_left=0
    cw_right=0
    fea_dim=40

    
lab = lab_name=lab_cd
    lab_folder=/tmp/pytorch-kaldi/kaldi_data_dir/exp/ihm/tri3_ali_train_sp_comb
    lab_opts=ali-to-pdf 
    lab_count_file=auto
    lab_data_folder=/tmp/pytorch-kaldi/kaldi_data_dir/data/ihm/train_sp_comb_hires
    lab_graph=/tmp/pytorch-kaldi/kaldi_data_dir/exp/ihm/tri3/graph_ami.o3g.kn.pr1-7

N_chunks=6
        
[dataset2]
data_name=dev_hires
fea = fea_name=mfcc
    fea_lst=/tmp/pytorch-kaldi/kaldi_data_dir/data/ihm/dev_hires/feats.scp
    fea_opts=apply-cmvn --utt2spk=ark:/tmp/pytorch-kaldi/kaldi_data_dir/data/ihm/dev_hires/utt2spk  ark:/tmp/pytorch-kaldi/kaldi_data_dir/data/ihm/dev_hires/data/cmvn_dev_hires.ark ark:- ark:- | add-deltas --delta-order=0 ark:- ark:- |
    cw_left=0
    cw_right=0
    fea_dim=40

    
lab = lab_name=lab_cd
    lab_folder=/tmp/pytorch-kaldi/kaldi_data_dir/exp/ihm/tri3_ali_dev
    lab_opts=ali-to-pdf 
    lab_count_file=auto
    lab_data_folder=/tmp/pytorch-kaldi/kaldi_data_dir/data/ihm/dev_hires
    lab_graph=/tmp/pytorch-kaldi/kaldi_data_dir/exp/ihm/tri3/graph_ami.o3g.kn.pr1-7

N_chunks=1

[dataset3]
data_name=eval_hires
fea = fea_name=mfcc
    fea_lst=/tmp/pytorch-kaldi/kaldi_data_dir/data/ihm/eval_hires/feats.scp
    fea_opts=apply-cmvn --utt2spk=ark:/tmp/pytorch-kaldi/kaldi_data_dir/data/ihm/eval_hires/utt2spk  ark:/tmp/pytorch-kaldi/kaldi_data_dir/data/ihm/eval_hires/data/cmvn_eval_hires.ark ark:- ark:- | add-deltas --delta-order=0 ark:- ark:- |
    cw_left=0
    cw_right=0
    fea_dim=40

    
lab = lab_name=lab_cd
    lab_folder=/tmp/pytorch-kaldi/kaldi_data_dir/exp/ihm/tri3_ali_eval
    lab_opts=ali-to-pdf 
    lab_count_file=auto
    lab_data_folder=/tmp/pytorch-kaldi/kaldi_data_dir/data/ihm/eval_hires
    lab_graph=/tmp/pytorch-kaldi/kaldi_data_dir/exp/ihm/tri3/graph_ami.o3g.kn.pr1-7

N_chunks=1

        
[data_use]
train_with=train_sp_comb_hires
valid_with=dev_hires
forward_with=eval_hires


[batches]
batch_size_train=192
max_seq_length_train=40
increase_seq_length_train=False
start_seq_len_train=40
multply_factor_seq_len_train=1
batch_size_valid=64
max_seq_length_valid=80

[architecture1]
arch_name = LSTM_layers
arch_proto = proto/LSTM_cudnn.proto
arch_library = neural_networks
arch_class = LSTM_cudnn
arch_pretrain_file = none
arch_freeze = False
arch_seq_model = True

hidden_size=512
num_layers=4
bias=True
batch_first=False
dropout=0.2
bidirectional=True

arch_lr = 0.00015
arch_halving_factor = 0.5
arch_improvement_threshold = 0.005
arch_opt = adam
opt_betas=0.9,0.999
opt_eps=1e-8
opt_weight_decay=0.0
opt_amsgrad=True

[architecture2]
arch_name=MLP_layers
arch_proto=proto/MLP.proto
arch_library=neural_networks
arch_class=MLP
arch_pretrain_file=none
arch_freeze=False
arch_seq_model=False
dnn_lay=N_out_lab_cd
dnn_drop=0.0
dnn_use_laynorm_inp=False
dnn_use_batchnorm_inp=False
dnn_use_batchnorm=False
dnn_use_laynorm=False
dnn_act=softmax

arch_lr=0.00015
arch_halving_factor=0.5
arch_improvement_threshold=0.005
arch_opt=adam
opt_betas=0.9,0.999
opt_eps=1e-8
opt_weight_decay=0.0
opt_amsgrad=True

[model]
model_proto=proto/model.proto
model:out_dnn1=compute(LSTM_layers,mfcc)
      out_dnn2=compute(MLP_layers,out_dnn1)
      loss_final=cost_nll(out_dnn2,lab_cd)
      err_final=cost_err(out_dnn2,lab_cd)


[forward]
forward_out=out_dnn2
normalize_posteriors=True
normalize_with_counts_from=lab_cd
save_out_file=True
require_decoding=True


[decoding]
decoding_script_folder=kaldi_decoding_scripts
decoding_script=decode_dnn.sh
decoding_proto=proto/decoding.proto
num_threads=6
min_active=200
max_active=7000
max_mem=50000000
beam=15.0
latbeam=8.0
acwt=0.10
max_arcs=-1
skip_scoring=false
scoring_script=/tmp/pytorch-kaldi/kaldi_decoding_scripts/score_asclite.sh
scoring_opts="--cmd run.pl --min_lmwt 4 --max_lmwt 20"
norm_vars=False

